/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_diozero_util_EpollNative */

#ifndef _Included_com_diozero_util_EpollNative
#define _Included_com_diozero_util_EpollNative
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_diozero_util_EpollNative
 * Method:    epollCreate
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_diozero_util_EpollNative_epollCreate
  (JNIEnv *, jclass);

/*
 * Class:     com_diozero_util_EpollNative
 * Method:    addFile
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_diozero_util_EpollNative_addFile
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     com_diozero_util_EpollNative
 * Method:    removeFile
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_com_diozero_util_EpollNative_removeFile
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_diozero_util_EpollNative
 * Method:    waitForEvents
 * Signature: (I)[Lcom/diozero/util/EpollEvent;
 */
JNIEXPORT jobjectArray JNICALL Java_com_diozero_util_EpollNative_waitForEvents
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_diozero_util_EpollNative
 * Method:    eventLoop
 * Signature: (ILcom/diozero/util/EpollNativeCallback;)I
 */
JNIEXPORT jint JNICALL Java_com_diozero_util_EpollNative_eventLoop
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     com_diozero_util_EpollNative
 * Method:    stopWait
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_diozero_util_EpollNative_stopWait
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_diozero_util_EpollNative
 * Method:    shutdown
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_diozero_util_EpollNative_shutdown
  (JNIEnv *, jclass, jint);


#ifdef __cplusplus
}
#endif
#endif
