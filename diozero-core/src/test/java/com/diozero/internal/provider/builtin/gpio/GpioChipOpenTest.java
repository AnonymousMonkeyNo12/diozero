package com.diozero.internal.provider.builtin.gpio;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Map;
import java.util.stream.Collectors;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

@SuppressWarnings("static-method")
public class GpioChipOpenTest {
	@Test
	public void test() throws IOException {
		Map<Integer, GpioChipTest> chips = Files.list(Paths.get("src/test/resources/dev"))
				.filter(p -> p.getFileName().toString().startsWith("gpiochip"))
				.map(p -> GpioChipOpenTest.openChip(p.toString())) //
				.collect(Collectors.toMap(GpioChipTest::getChipId, chip -> chip));
		Assertions.assertNotNull(chips);
		Assertions.assertEquals(2, chips.size());
	}

	private static GpioChipTest openChip(String deviceFilename) {
		return new GpioChipTest(Integer.parseInt(deviceFilename.substring(deviceFilename.length() - 1)));
	}

	public static class GpioChipTest {
		private int chipId;
		
		public GpioChipTest(int chipId) {
			this.chipId = chipId;
		}

		public int getChipId() {
			return chipId;
		}
	}
}
